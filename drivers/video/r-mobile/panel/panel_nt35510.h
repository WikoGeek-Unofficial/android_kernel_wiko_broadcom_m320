/*
 * drivers/video/r-mobile/panel/panel_nt35510.h
 *
 * Copyright (C) 2014 Broadcom Corporation
 * All rights reserved.
 *
 */

#include "panel_common.h"

#define NT35510_HS_TRAIL_NS 60
#define NT35510_HS_TRAIL_UI 4
#define NT35510_HS_TRAIL_ADJUST (25*PRECISION_FACT)
#define NT35510_HSPPVL_NS 60
#define NT35510_HSPPVL_UI 4
#define NT35510_CKTRVL_NS 60
#define NT35510_CKPPVL_NS 50
#define NT35510_HSZEROVL_NS 145
#define NT35510_HSZEROVL_UI 10
#define NT35510_CKPOSTVL_NS 60
#define NT35510_CKPOSTVL_UI 128
#define NT35510_CKPREVL_NS 1
#define NT35510_CKPREVL_UI 8

static struct screen_disp_time_param nt35510_time_param __initdata = {
	.hstrial_ns = NT35510_HS_TRAIL_NS,
	.hstrial_ui = NT35510_HS_TRAIL_UI,
	.hstrial_adj = NT35510_HS_TRAIL_ADJUST,
	.hsppvl_ns = NT35510_HSPPVL_NS,
	.hsppvl_ui = NT35510_HSPPVL_UI,
	.cktrvl_ns = NT35510_CKTRVL_NS,
	.ckppvl_ns = NT35510_CKPPVL_NS,
	.hszerovl_ns = NT35510_HSZEROVL_NS,
	.hszerovl_ui = NT35510_HSZEROVL_UI,
	.ckpostvl_ns = NT35510_CKPOSTVL_NS,
	.ckpostvl_ui = NT35510_CKPOSTVL_UI,
	.ckprevl_ns = NT35510_CKPREVL_NS,
	.ckprevl_ui = NT35510_CKPREVL_UI,
};

static struct dispctrl_rec nt35510_initialize_cmd[] __initdata = {
	{DISPCTRL_WR_CMND, 0xF0},
	{DISPCTRL_WR_DATA, 0x55},
	{DISPCTRL_WR_DATA, 0xAA},
	{DISPCTRL_WR_DATA, 0x52},
	{DISPCTRL_WR_DATA, 0x08},
	{DISPCTRL_WR_DATA, 0x01},

	{DISPCTRL_WR_CMND, 0xB0},
	{DISPCTRL_WR_DATA, 0x09},
	{DISPCTRL_WR_DATA, 0x09},
	{DISPCTRL_WR_DATA, 0x09},

	{DISPCTRL_WR_CMND, 0xB6},
	{DISPCTRL_WR_DATA, 0x34},
	{DISPCTRL_WR_DATA, 0x34},
	{DISPCTRL_WR_DATA, 0x34},

	{DISPCTRL_WR_CMND, 0xB1},
	{DISPCTRL_WR_DATA, 0x09},
	{DISPCTRL_WR_DATA, 0x09},
	{DISPCTRL_WR_DATA, 0x09},

	{DISPCTRL_WR_CMND, 0xB7},
	{DISPCTRL_WR_DATA, 0x24},
	{DISPCTRL_WR_DATA, 0x24},
	{DISPCTRL_WR_DATA, 0x24},

	{DISPCTRL_WR_CMND, 0xB3},
	{DISPCTRL_WR_DATA, 0x05},
	{DISPCTRL_WR_DATA, 0x05},
	{DISPCTRL_WR_DATA, 0x05},

	{DISPCTRL_WR_CMND, 0xB9},
	{DISPCTRL_WR_DATA, 0x25},
	{DISPCTRL_WR_DATA, 0x25},
	{DISPCTRL_WR_DATA, 0x25},

	{DISPCTRL_WR_CMND, 0xBF},
	{DISPCTRL_WR_DATA, 0x01},

	{DISPCTRL_WR_CMND, 0xB5},
	{DISPCTRL_WR_DATA, 0x0B},
	{DISPCTRL_WR_DATA, 0x0B},
	{DISPCTRL_WR_DATA, 0x0B},

	{DISPCTRL_WR_CMND, 0xBA},
	{DISPCTRL_WR_DATA, 0x24},
	{DISPCTRL_WR_DATA, 0x24},
	{DISPCTRL_WR_DATA, 0x24},

	{DISPCTRL_WR_CMND, 0xC2},
	{DISPCTRL_WR_DATA, 0x01},

	{DISPCTRL_WR_CMND, 0xBC},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xBD},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},

	/*Gamma setting Start*/

	{DISPCTRL_WR_CMND, 0xD1},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x6B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x87},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x27},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x53},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x98},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x22},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x83},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x78},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x9E},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0xDD},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x2E},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x54},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x7F},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x95},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xB3},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xC2},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xE1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xFE},

	{DISPCTRL_WR_CMND, 0xD2},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x6B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x87},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x27},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x53},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x98},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x22},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x83},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x78},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x9E},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0xDD},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x2E},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x54},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x7F},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x95},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xB3},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xC2},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xE1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xFE},

	{DISPCTRL_WR_CMND, 0xD3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x6B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x87},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x27},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x53},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x98},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x22},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x83},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x78},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x9E},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0xDD},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x2E},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x54},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x7F},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x95},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xB3},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xC2},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xE1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xFE},

	{DISPCTRL_WR_CMND, 0xD4},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x6B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x87},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x27},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x53},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x98},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x22},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x50},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x9E},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0xDD},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x2E},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x54},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x7F},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x95},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xB3},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xC2},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xE1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xFE},

	{DISPCTRL_WR_CMND, 0xD5},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x6B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x87},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x27},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x53},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x98},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x22},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x50},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x9E},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0xDD},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x2E},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x54},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x7F},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x95},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xB3},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xC2},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xE1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xFE},

	{DISPCTRL_WR_CMND, 0xD6},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x6B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x87},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xA3},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x27},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x53},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x98},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xCE},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x22},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x43},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x50},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0x9E},
	{DISPCTRL_WR_DATA, 0x02},
	{DISPCTRL_WR_DATA, 0xDD},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x2E},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x54},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x7F},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x95},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xB3},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xC2},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xE1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xF1},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0xFE},
	/*Gamma setting End*/

	/*Display set start*/

	{DISPCTRL_WR_CMND, 0xF0},
	{DISPCTRL_WR_DATA, 0x55},
	{DISPCTRL_WR_DATA, 0xAA},
	{DISPCTRL_WR_DATA, 0x52},
	{DISPCTRL_WR_DATA, 0x08},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xB6},
	{DISPCTRL_WR_DATA, 0x0A},

	{DISPCTRL_WR_CMND, 0xB7},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xB8},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x05},
	{DISPCTRL_WR_DATA, 0x05},
	{DISPCTRL_WR_DATA, 0x05},


	{DISPCTRL_WR_CMND, 0xBA},
	{DISPCTRL_WR_DATA, 0x01},

	{DISPCTRL_WR_CMND, 0x36},
	{DISPCTRL_WR_DATA, 0x02},

	{DISPCTRL_WR_CMND, 0xBD},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x84},
	{DISPCTRL_WR_DATA, 0x07},
	{DISPCTRL_WR_DATA, 0x32},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xBE},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x84},
	{DISPCTRL_WR_DATA, 0x07},
	{DISPCTRL_WR_DATA, 0x31},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xBF},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0x84},
	{DISPCTRL_WR_DATA, 0x07},
	{DISPCTRL_WR_DATA, 0x31},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xCC},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0xB1},
	{DISPCTRL_WR_DATA, 0x4C},
	{DISPCTRL_WR_DATA, 0x04},

	{DISPCTRL_WR_CMND, 0x35},
	{DISPCTRL_WR_DATA, 0x00},

	{DISPCTRL_WR_CMND, 0x3A},
	{DISPCTRL_WR_DATA, 0x77},

	{DISPCTRL_WR_CMND, 0x2A},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_WR_DATA, 0xDF},

	{DISPCTRL_WR_CMND, 0x2B},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_WR_DATA, 0x03},
	{DISPCTRL_WR_DATA, 0x1F},
	/*Display set End*/


	{DISPCTRL_WR_CMND, 0x11},
	{DISPCTRL_SLEEP_MS, 120},
	{DISPCTRL_DRAW_BLACK, 0},


	{DISPCTRL_WR_CMND, 0x29},
	{DISPCTRL_SLEEP_MS, 10},

	{DISPCTRL_LIST_END, 0},
};

static struct dispctrl_rec nt35510_suspend_cmd[] __initdata = {
	{DISPCTRL_WR_CMND, 0x28},
	{DISPCTRL_SLEEP_MS, 150},

	{DISPCTRL_WR_CMND, 0x10},
	{DISPCTRL_SLEEP_MS, 150},
	{DISPCTRL_LIST_END, 0},

};


#if defined(CONFIG_LCD_ESD_RECOVERY_BY_CHECK_REG)
static struct dispctrl_rec nt35510_mauc0_cmd[] __initdata = {
	{DISPCTRL_WR_CMND, 0xF0},
	{DISPCTRL_WR_DATA, 0x55},
	{DISPCTRL_WR_DATA, 0xAA},
	{DISPCTRL_WR_DATA, 0x52},
	{DISPCTRL_WR_DATA, 0x08},
	{DISPCTRL_WR_DATA, 0x00},
	{DISPCTRL_LIST_END, 0},
};

static struct dispctrl_rec nt35510_mauc1_cmd[] __initdata = {
	{DISPCTRL_WR_CMND, 0xF0},
	{DISPCTRL_WR_DATA, 0x55},
	{DISPCTRL_WR_DATA, 0xAA},
	{DISPCTRL_WR_DATA, 0x52},
	{DISPCTRL_WR_DATA, 0x08},
	{DISPCTRL_WR_DATA, 0x01},
	{DISPCTRL_LIST_END, 0},

};
#endif

static struct  dispctrl_rec nt35510_panel_id_seq[] __initdata = {
	{DISPCTRL_WR_CMND, RDID1},
	{DISPCTRL_WR_DATA, 0x55},
	{DISPCTRL_WR_CMND, RDID2},
	{DISPCTRL_WR_DATA, 0xBC},
	{DISPCTRL_WR_CMND, RDID3},
	{DISPCTRL_WR_DATA, 0xC0},
	{DISPCTRL_LIST_END, 0},
};

/* All the parameters are not populated or used. In further
 code-restructuring patches these will be taken care */
struct lcd_config nt35510_config __initdata = {
	.name = "NT35510_HEAT",
	.modes_supp = LCD_CMD_ONLY,
	.pack_send_mode = RT_DISPLAY_SEND_MODE_HS,
	.max_lanes = 2,
	.phy_width = 52,
	.phy_height = 86,
	.width = 480,
	.height = 800,
	.hbp = 24,
	.hfp = 136,
	.hsync = 8,
	.vbp = 4,
	.vfp = 4,
	.vsync = 1,
	.setup = 1000,
	.pulse = 10000,
	.init_seq_cmd = nt35510_initialize_cmd,
	.suspend_seq = nt35510_suspend_cmd,
	.panel_id = &nt35510_panel_id_seq[0],
	.verify_id = false,
#if defined(CONFIG_LCD_ESD_RECOVERY_BY_CHECK_REG)
	.esd_check = {
		.set0 = nt35510_mauc0_cmd,
		.set1 = nt35510_mauc1_cmd,
	},
#endif
	.color_mode = RGB888,
	.vburst_mode = LCD_VID_NONE,
	.max_hs_bps = 500 * 1000000,
	.cont_clock = 0,
	.cmd_transmission = 1,
	.time_param = &nt35510_time_param,
};




