/*
 * SuperPix SP1628 sensor driver
 *
 * Copyright 2014 Broadcom Corporation.  All rights reserved.
 * http://www.broadcom.com/licenses/GPLv2.php
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation version 2.
 *
 * This program is distributed "as is" WITHOUT ANY WARRANTY of any
 * kind, whether express or implied; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __SP1628_H__
#define __SP1628_H__

/* Camera chip I2C properties */
/* SP1628 I2C addr is configurable by I2CID pin
 * If I2CID pin is 0, addr is 0x3C
 * If I2CID pin is 1, addr is 0x3D
 */
#define SP1628_CHIP_I2C_ADDR        0x3d

#define SP1628_CHIP_ID              0x1628
#define SP1628_CHIP_ID_HIGH         0x02
#define SP1628_CHIP_ID_LOW          0xa0

#define SP1628_REG_ESC              0xFF

/**
 * struct sp1628_reg - sp1628 register format
 * @reg: 8-bit offset to register
 * @val: 8/16/32-bit register value
 * @length: length of the register
 *
 * Define a structure for sp1628 register initialization values
 */
struct sp1628_reg {
	u8 reg;
	u8 val;
};

static const struct sp1628_reg sp1628_common_init[] = {
	{0xfd, 0x00},
	{0x91, 0x00},
	{0x92, 0x81},
	{0x98, 0x2a},
	{0x96, 0xd0},
	{0x97, 0x02},
	{0x2f, 0x20},	/* 24M*3=72M */
	{0x0b, 0x48},
	{0x30, 0x80},
	{0x0c, 0x66},
	{0x0d, 0x12},
	{0x13, 0x10},
	{0x14, 0x00},
	{0x12, 0x00},
	{0x6b, 0x11},
	{0x6c, 0x00},
	{0x6d, 0x00},
	{0x6e, 0x00},
	{0x6f, 0x11},
	{0x73, 0x12},
	{0x7a, 0x11},
	{0x15, 0x18},
	{0x71, 0x19},
	{0x76, 0x19},
	{0x29, 0x08},
	{0x18, 0x01},
	{0x19, 0x10},
	{0x1a, 0xc3},
	{0x1b, 0x6f},
	{0x1d, 0x11},
	{0x1e, 0x00},
	{0x1f, 0x80},
	{0x20, 0x7f},
	{0x22, 0x3c},
	{0x25, 0xff},
	{0x2b, 0x88},
	{0x2c, 0x85},
	{0x2d, 0x00},
	{0x2e, 0x80},
	{0x27, 0x38},
	{0x28, 0x03},
	{0x70, 0x1a},
	{0x72, 0x1a},
	{0x74, 0x18},
	{0x75, 0x18},
	{0x77, 0x18},
	{0x7f, 0x19},
	{0x31, 0x71},
	{0xfd, 0x01},
	{0x5d, 0x11},
	{0x5f, 0x00},
	{0x36, 0x08},
	{0x2f, 0xff},
	{0xfb, 0x25},
	{0x48, 0x00},
	{0x49, 0x99},
	{0xf2, 0x0a},
	{0xfd, 0x02},
	{0x52, 0x34},
	{0x53, 0x02},
	{0x54, 0x0c},
	{0x55, 0x08},
	{0x86, 0x0c},
	{0x87, 0x10},
	{0x8b, 0x10},
	/*72M 12--30 */
	{0xfd, 0x00},
	{0x03, 0x05},
	{0x04, 0x64},
	{0x05, 0x00},
	{0x06, 0x00},
	{0x09, 0x00},
	{0x0a, 0x02},
	{0xfd, 0x01},
	{0xf0, 0x00},
	{0xf7, 0xe6},
	{0xf8, 0xc1},
	{0x02, 0x08},
	{0x03, 0x01},
	{0x06, 0xe6},
	{0x07, 0x00},
	{0x08, 0x01},
	{0x09, 0x00},
	{0xfd, 0x02},
	{0x40, 0x0a},
	{0x41, 0xc1},
	{0x42, 0x00},
	{0x88, 0x37},
	{0x89, 0xa7},
	{0x8a, 0x22},
	{0xfd, 0x02},
	{0xbe, 0x30},
	{0xbf, 0x07},
	{0xd0, 0x30},
	{0xd1, 0x07},
	{0xfd, 0x01},
	{0x5b, 0x07},
	{0x5c, 0x30},
	{0xfd, 0x00},

	{0xfd, 0x01},
	{0x5a, 0x38},
	{0xfd, 0x02},
	{0xba, 0x30},
	{0xbb, 0x50},
	{0xbc, 0xc0},
	{0xbd, 0xa0},
	{0xb8, 0x80},
	{0xb9, 0x90},
	{0xfd, 0x01},
	{0xe0, 0x54},
	{0xe1, 0x40},
	{0xe2, 0x38},
	{0xe3, 0x34},
	{0xe4, 0x34},
	{0xe5, 0x30},
	{0xe6, 0x30},
	{0xe7, 0x2e},
	{0xe8, 0x2e},
	{0xe9, 0x2e},
	{0xea, 0x2c},
	{0xf3, 0x2c},
	{0xf4, 0x2c},
	{0xfd, 0x01},
	{0x04, 0xc0},
	{0x05, 0x2c},
	{0x0a, 0xc0},
	{0x0b, 0x2c},
	{0xfd, 0x01},
	{0xeb, 0x78},
	{0xec, 0x78},
	{0xed, 0x05},
	{0xee, 0x0a},
	{0xfd, 0x01},
	{0x26, 0x30},
	{0x27, 0xdc},
	{0x28, 0x05},
	{0x29, 0x08},
	{0x2a, 0x00},
	{0x2b, 0x03},
	{0x2c, 0x00},
	{0x2d, 0x2f},
	{0xfd, 0x01},
	{0xa1, 0x37},
	{0xa2, 0x26},
	{0xa3, 0x32},
	{0xa4, 0x2b},
	{0xad, 0x0f},
	{0xae, 0x0a},
	{0xaf, 0x0a},
	{0xb0, 0x0a},
	{0x18, 0x2f},
	{0x19, 0x30},
	{0x1a, 0x32},
	{0x1b, 0x30},
	{0xbf, 0xa5},
	{0xc0, 0x12},
	{0xc1, 0x08},
	{0xfa, 0x00},
	{0xa5, 0x35},
	{0xa6, 0x24},
	{0xa7, 0x2e},
	{0xa8, 0x25},
	{0xb1, 0x00},
	{0xb2, 0x04},
	{0xb3, 0x00},
	{0xb4, 0x00},
	{0x1c, 0x24},
	{0x1d, 0x23},
	{0x1e, 0x2c},
	{0xb9, 0x25},
	{0x21, 0xa0},
	{0x22, 0x13},
	{0x23, 0x1c},
	{0x24, 0x0d},
	{0xa9, 0x2f},
	{0xaa, 0x24},
	{0xab, 0x2d},
	{0xac, 0x24},
	{0xb5, 0x00},
	{0xb6, 0x00},
	{0xb7, 0x00},
	{0xb8, 0x00},
	{0xba, 0x22},
	{0xbc, 0x24},
	{0xbd, 0x31},
	{0xbe, 0x24},
	{0x25, 0xa0},
	{0x45, 0x08},
	{0x46, 0x12},
	{0x47, 0x09},
	{0xfd, 0x01},
	{0x32, 0x15},
	{0xfd, 0x02},
	{0x26, 0xc9},
	{0x27, 0x8b},
	{0x1b, 0x80},
	{0x1a, 0x80},
	{0x18, 0x27},
	{0x19, 0x26},
	{0x2a, 0x01},
	{0x2b, 0x10},
	{0x28, 0xf8},
	{0x29, 0x08},
	/* d65 */
	{0x66, 0x35},
	{0x67, 0x60},
	{0x68, 0xb0},
	{0x69, 0xe0},
	{0x6a, 0xa5},
	/* indoor */
	{0x7c, 0x38},
	{0x7d, 0x58},
	{0x7e, 0xdb},
	{0x7f, 0x13},
	{0x80, 0xa6},
	/* cwf */
	{0x70, 0x18},
	{0x71, 0x4a},
	{0x72, 0x08},
	{0x73, 0x32},
	{0x74, 0xaa},
	/*tl84 */
	{0x6b, 0x02},
	{0x6c, 0x2a},
	{0x6d, 0x1e},
	{0x6e, 0x49},
	{0x6f, 0xaa},
	/* f */
	{0x61, 0xea},
	{0x62, 0xf8},
	{0x63, 0x4f},
	{0x64, 0x5f},
	{0x65, 0x5a},
	{0x75, 0x80},
	{0x76, 0x09},
	{0x77, 0x02},
	{0x24, 0x25},
	{0x0e, 0x16},
	{0x3b, 0x09},
	{0xfd, 0x02},
	{0xde, 0x0f},
	{0xd2, 0x0c},
	{0xd3, 0x0a},
	{0xd4, 0x08},
	{0xd5, 0x08},
	{0xd7, 0x10},
	{0xd8, 0x1d},
	{0xd9, 0x32},
	{0xda, 0x48},
	{0xdb, 0x08},
	{0xe8, 0x38},
	{0xe9, 0x38},
	{0xea, 0x38},
	{0xeb, 0x38},
	{0xec, 0x60},
	{0xed, 0x40},
	{0xee, 0x38},
	{0xef, 0x38},
	{0xf3, 0x00},
	{0xf4, 0x00},
	{0xf5, 0x00},
	{0xf6, 0x00},
	{0xfd, 0x02},
	{0xdc, 0x04},
	{0x05, 0x6f},
	{0x09, 0x10},
	{0xfd, 0x01},
	{0x64, 0x22},
	{0x65, 0x22},
	{0x86, 0x20},
	{0x87, 0x20},
	{0x88, 0x20},
	{0x89, 0x20},
	{0x6d, 0x0f},
	{0x6e, 0x0f},
	{0x6f, 0x10},
	{0x70, 0x10},
	{0x71, 0x0d},
	{0x72, 0x23},
	{0x73, 0x23},
	{0x74, 0x23},
	{0x75, 0x46},
	{0x76, 0x36},
	{0x77, 0x36},
	{0x78, 0x36},
	{0x81, 0x1d},
	{0x82, 0x2b},
	{0x83, 0x2b},
	{0x84, 0x2b},
	{0x85, 0x0a},
	{0xfd, 0x01},
	{0x8b, 0x00},
	{0x8c, 0x0d},
	{0x8d, 0x1f},
	{0x8e, 0x2d},
	{0x8f, 0x3a},
	{0x90, 0x4b},
	{0x91, 0x59},
	{0x92, 0x64},
	{0x93, 0x70},
	{0x94, 0x83},
	{0x95, 0x92},
	{0x96, 0xa1},
	{0x97, 0xae},
	{0x98, 0xba},
	{0x99, 0xc4},
	{0x9a, 0xcf},
	{0x9b, 0xdb},
	{0x9c, 0xe5},
	{0x9d, 0xec},
	{0x9e, 0xf3},
	{0x9f, 0xfa},
	{0xa0, 0xff},
	{0xfd, 0x02},
	{0x15, 0xc8},
	{0x16, 0x95},
	{0xa0, 0x73},
	{0xa1, 0x06},
	{0xa2, 0x06},
	{0xa3, 0xf4},
	{0xa4, 0x99},
	{0xa5, 0xf4},
	{0xa6, 0xe7},
	{0xa7, 0xf4},
	{0xa8, 0xa6},
	{0xa9, 0x00},
	{0xaa, 0x33},
	{0xab, 0x0f},
	{0xac, 0x80},
	{0xad, 0x00},
	{0xae, 0x00},
	{0xaf, 0xe7},
	{0xb0, 0xc0},
	{0xb1, 0xda},
	{0xb2, 0xe7},
	{0xb3, 0xb4},
	{0xb4, 0xe6},
	{0xb5, 0x00},
	{0xb6, 0x33},
	{0xb7, 0x0f},
	{0xfd, 0x01},
	{0xd3, 0x98},
	{0xd4, 0x98},
	{0xd5, 0x8a},
	{0xd6, 0x75},
	{0xd7, 0x98},
	{0xd8, 0x98},
	{0xd9, 0x8a},
	{0xda, 0x75},
	{0xfd, 0x01},
	{0xd2, 0x00},
	{0xfd, 0x01},
	{0xc2, 0xee},
	{0xc3, 0xee},
	{0xc4, 0xdd},
	{0xc5, 0xbb},
	{0xfd, 0x01},
	{0xcd, 0x10},
	{0xce, 0x1f},
	{0xfd, 0x02},
	{0x35, 0x6f},
	{0x37, 0x13},
	{0xfd, 0x01},
	{0xdb, 0x00},
	{0x10, 0x00},
	{0x14, 0x25},
	{0x11, 0x10},
	{0x15, 0x25},
	{0x16, 0x15},
	{0xfd, 0x02},
	{0x8e, 0x10},
	{0x90, 0x20},
	{0x91, 0x20},
	{0x92, 0x60},
	{0x93, 0x80},
	{0xfd, 0x02},
	{0x85, 0x00},
	{0xfd, 0x01},
	{0x00, 0x00},
	{0x32, 0x15},
	{0x33, 0xef},
	{0x34, 0xc7},
	{0x35, 0x00},    /* UYVY */
	{0xfd, 0x00},

	{SP1628_REG_ESC, 0},
};


static const struct sp1628_reg sp1628_stream_on[] = {
	{0xfd, 0x00},
	{0x92, 0x81},
	{SP1628_REG_ESC, 0},
};

static const struct sp1628_reg sp1628_stream_off[] = {
	{0xfd, 0x00},
	{0x92, 0x01},
	{SP1628_REG_ESC, 0},
};

/* advance features */
/* AntiBanding */
static const struct sp1628_reg sp1628_banding_auto[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_banding_50[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_banding_60[] = {
	{SP1628_REG_ESC, 0x00},
};

/* EFFECT */
static const struct sp1628_reg sp1628_effect_no[] = {
	{0xfd, 0x01},
	{0x66, 0x00},
	{0x67, 0x80},
	{0x68, 0x80},
	{0xdb, 0x00},
	{0x34, 0xc7},
	{0xfd, 0x02},
	{0x14, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_effect_bw[] = {
	{0xfd, 0x01},
	{0x66, 0x20},
	{0x67, 0x80},
	{0x68, 0x80},
	{0xdb, 0x00},
	{0x34, 0xc7},
	{0xfd, 0x02},
	{0x14, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_effect_sepia[] = {
	{0xfd, 0x01},
	{0x66, 0x10},
	{0x67, 0x98},
	{0x68, 0x58},
	{0xdb, 0x00},
	{0x34, 0xc7},
	{0xfd, 0x02},
	{0x14, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_effect_negative[] = {
	{0xfd, 0x01},
	{0x66, 0x08},
	{0x67, 0x80},
	{0x68, 0x80},
	{0xdb, 0x00},
	{0x34, 0xc7},
	{0xfd, 0x02},
	{0x14, 0x00},
	{SP1628_REG_ESC, 0x00},
};

/*Contrast */
static const struct sp1628_reg sp1628_contrast_lv1[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_contrast_lv2[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_contrast_lv3_default[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_contrast_lv4[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_contrast_lv5[] = {
	{SP1628_REG_ESC, 0x00},
};

/* Sharpness */
static const struct sp1628_reg sp1628_sharpness_lv1[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_sharpness_lv2[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_sharpness_lv3_default[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_sharpness_lv4[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_sharpness_lv5[] = {
	{SP1628_REG_ESC, 0x00},
};

/* Saturation */
static const struct sp1628_reg sp1628_saturation_lv1[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_saturation_lv2[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_saturation_lv3_default[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_saturation_lv4[] = {
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_saturation_lv5[] = {
	{SP1628_REG_ESC, 0x00},
};

/* Brightness */
static const struct sp1628_reg sp1628_ev_lv1[] = {
	{0xfd, 0x01},
	{0xeb, 0x58},
	{0xec, 0x58},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_ev_lv2[] = {
	{0xfd, 0x01},
	{0xeb, 0x68},
	{0xec, 0x68},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_ev_lv3_default[] = {
	{0xfd, 0x01},
	{0xeb, 0x78},
	{0xec, 0x78},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_ev_lv4[] = {
	{0xfd, 0x01},
	{0xeb, 0x98},
	{0xec, 0x98},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_ev_lv5[] = {
	{0xfd, 0x01},
	{0xeb, 0xb8},
	{0xec, 0xb8},
	{SP1628_REG_ESC, 0x00},
};

/* White Balance */
static const struct sp1628_reg sp1628_wb_auto[] = {
	{0xfd, 0x00},
	{0xe7, 0x03},
	{0xfd, 0x02},
	{0x26, 0xc9},
	{0x27, 0x8b},
	{0xfd, 0x01},
	{0x32, 0x15},
	{0xfd, 0x00},
	{0xe7, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_wb_fluorescent[] = {
	{0xfd, 0x01},
	{0x32, 0x05},
	{0xfd, 0x00},
	{0xe7, 0x03},
	{0xfd, 0x02},
	{0x26, 0x95},
	{0x27, 0x9c},
	{0xfd, 0x00},
	{0xe7, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_wb_daylight[] = {
	{0xfd, 0x01},
	{0x32, 0x05},
	{0xfd, 0x00},
	{0xe7, 0x03},
	{0xfd, 0x02},
	{0x26, 0xca},
	{0x27, 0x73},
	{0xfd, 0x00},
	{0xe7, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_wb_cloudy[] = {
	{0xfd, 0x01},
	{0x32, 0x05},
	{0xfd, 0x00},
	{0xe7, 0x03},
	{0xfd, 0x02},
	{0x26, 0xdb},
	{0x27, 0x63},
	{0xfd, 0x00},
	{0xe7, 0x00},
	{SP1628_REG_ESC, 0x00},
};

static const struct sp1628_reg sp1628_wb_tungsten[] = {
	{0xfd, 0x01},
	{0x32, 0x05},
	{0xfd, 0x00},
	{0xe7, 0x03},
	{0xfd, 0x02},
	{0x26, 0x8c},
	{0x27, 0xb3},
	{0xfd, 0x00},
	{0xe7, 0x00},
	{SP1628_REG_ESC, 0x00},
};

#endif /* __SP1628_H__ */

